# Form implementation generated from reading ui file 'QT3DViewer_main_window.ui'
#
# Created by: PyQt6 UI code generator 6.2.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
from datetime import date

from PyQt6 import QtCore, QtWidgets
from PyQt6.QtGui import QVector3D
from PyQt6.QtWidgets import QLabel
from pyqtgraph import opengl as gl


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(471, 640)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMaximumSize(QtCore.QSize(471, 640))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBoxShapes = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBoxShapes.setGeometry(QtCore.QRect(10, 10, 451, 51))
        self.groupBoxShapes.setFlat(False)
        self.groupBoxShapes.setObjectName("groupBoxShapes")
        self.layoutWidget = QtWidgets.QWidget(self.groupBoxShapes)
        self.layoutWidget.setGeometry(QtCore.QRect(90, 20, 281, 19))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayoutShapes = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayoutShapes.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayoutShapes.setObjectName("horizontalLayoutShapes")

        # Radio buttons setup
        self.radioButtonCube = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButtonCube.setObjectName("radioButtonCube")
        self.radioButtonCube.toggled.connect(lambda: self.radioButtonCube_checked())
        self.horizontalLayoutShapes.addWidget(self.radioButtonCube)

        self.radioButtonSphere = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButtonSphere.setObjectName("radioButtonSphere")
        self.radioButtonSphere.toggled.connect(lambda: self.radioButtonSphere_checked())
        self.horizontalLayoutShapes.addWidget(self.radioButtonSphere)

        self.radioButtonPyramid = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioButtonPyramid.setObjectName("radioButtonPyramid")
        self.radioButtonPyramid.toggled.connect(lambda: self.radioButtonPyramid_checked())
        self.horizontalLayoutShapes.addWidget(self.radioButtonPyramid)

        # Main painting widget
        self.widget = gl.GLViewWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 70, 451, 531))
        self.widget.setObjectName("widget")
        MainWindow.setCentralWidget(self.centralwidget)

        # Build and setup Statusbar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        self.lblInfoMessage = QLabel("")
        self.statusbar.addPermanentWidget(self.lblInfoMessage)
        self.lblDate = QLabel("")
        self.statusbar.addPermanentWidget(self.lblDate)
        # Show date in statusbar
        today_date = date.today()
        self.lblDate.setText(today_date.strftime('%d-%m-%Y'))
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.radioButtonCube.setChecked(True)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "QT3DViewer"))
        self.groupBoxShapes.setTitle(_translate("MainWindow", "Shape"))
        self.radioButtonCube.setText(_translate("MainWindow", "Cube"))
        self.radioButtonSphere.setText(_translate("MainWindow", "Sphere"))
        self.radioButtonPyramid.setText(_translate("MainWindow", "Pyramid"))

    def radioButtonCube_checked(self):
        if self.radioButtonCube.isChecked():
            self.widget.reset()
            self.lblInfoMessage.setText("Cube")
            self.paint_3d_axis()

    def radioButtonSphere_checked(self):
        if self.radioButtonSphere.isChecked():
            self.widget.reset()
            self.lblInfoMessage.setText("Sphere")
            self.paint_3d_axis()

    def radioButtonPyramid_checked(self):
        if self.radioButtonPyramid.isChecked():
            self.widget.reset()
            self.lblInfoMessage.setText("Pyramid")
            self.paint_3d_axis()

    def paint_3d_axis(self):
        # draw grid surface
        xgrid = gl.GLGridItem()
        xgrid.setColor('#FF0000')
        xgrid.setSize(20, 20)
        xgrid.setSpacing(0.5, 0.5)
        self.widget.addItem(xgrid)

        # draw 3D axis
        axis = gl.GLAxisItem(size=QVector3D(4, 4, 4))
        self.widget.addItem(axis)

    def draw_cube(self):
        pass

    def draw_sphere(self):
        pass

    def draw_pyramid(self):
        pass
